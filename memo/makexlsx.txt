<?xml version="1.0" encoding="utf-8" ?>
<package><job><script language="VBScript"><![CDATA[

' update 2022.02.07 14:20

Option Explicit
'////////////////////////////////////////

Dim findPath

'////////////////////////////////////////

Dim fso: Set fso = CreateObject("Scripting.FileSystemObject")
Dim ims: Set ims = CreateObject("Scripting.Dictionary")
Dim sht
Dim row: row = 0

'////////////////////////////////////////
'// Main
Sub Main

    '指定フォルダーパスの処理
    Dim lv : lv = 1
    Dim rf : Set rf = fso.GetFolder(findPath)
    findPath = rf.Path
    Set rf = Nothing
    Dim fn : fn = fso.GetFileName(findPath)

    Dim saveFile : saveFile = fso.GetAbsolutePathName(".\"&fn&".xlsx")
    If fso.FileExists(saveFile) Then
        WScript.Echo "ファイルがあります("&saveFile&")"
        Exit Sub
    End If

    Dim imgFolder : imgFolder = fso.GetAbsolutePathName(".\img")
    If Not fso.FolderExists(imgFolder) Then
        WScript.Echo "フォルダーがありません("&imgFolder&")"
        Exit Sub
    End If

    'True:Excel起動, False:Excel利用
    Dim xlsapp : xlsapp = False
    'Excelアプリケーションのインスタンス生成/ワークシート作成
    Dim xls, wkb
    If xlsapp Then
        'Excelアプリケーションを起動して実行する
        On Error Resume Next
        Set xls = CreateObject("Excel.Application")
        If Err.Number <> 0 Then
            WScript.Echo Err.Number & ":" & Err.Description
        End If
        If Not IsObject(xls) Then
            WScript.Echo "Excel が起動できませんでした"
            Exit Sub
        End If
        Set wkb = xls.Workbooks.Add()
        On Error GoTo 0
    Else
        '起動されているExcelアプリケーションを利用して実行する(高速!?)
        On Error Resume Next
        Set wkb = CreateObject("Excel.Sheet")
        If Err.Number <> 0 Then
            WScript.Echo Err.Number & ":" & Err.Description
        End If
        If Not IsObject(wkb) Then
            WScript.Echo "Excel が起動されていません"
            Exit Sub
        End If
        On Error GoTo 0
    End If

    '描画制御(False:高速化!?)
    wkb.Application.Visible = True
    wkb.Application.ScreenUpdating = False

    'ワークシートの初期設定
    Set sht = wkb.Sheets(1)
    sht.Activate
    sht.Cells.NumberFormatLocal = "@"
    sht.Range("A:T").ColumnWidth = 3

    'ワーク画像を事前に貼りておく
    Call loadimg

    '指定フォルダ出力
    writesht "FOL"&vbTab&findPath

    'フォルダー単位出力
    On Error Resume Next

    Call GetSubFolder(findPath, lv)

    'エラー情報保存
    Dim ErrNum : ErrNum = Err.Number
    Dim ErrTxt : ErrTxt = Err.Description

    'ワークシート・エクセルファイル出力＆クローズ
    wkb.Application.ScreenUpdating = True
    wkb.Application.Visible = True

    If ErrNum <> 0 Then
        'エラー出力
        WScript.Echo ErrNum & ":" & ErrTxt
    Else
    End If
    'ワーク画像を削除する
    Call deleteimg
    'ワークシート・エクセルファイル出力＆クローズ(エラーでは出力してみる)
    wkb.SaveAs(saveFile)
    wkb.Close

    If xlsapp Then
        xls.Quit
    End If

    Set sht = Nothing
    Set wkb = Nothing
    Set xls = Nothing

End Sub

'////////////////////////////////////////
'// Main
Dim arg: Set arg = WScript.Arguments.Unnamed
If arg.Count = 1 Then
    findPath = arg(0)
    WScript.Echo "開始します" & vbCrLf
    Call Main
    WScript.Echo vbCrLf & "終了しました"
Else
    WScript.Echo "引数を指定してください"
End If

'////////////////////////////////////////
'// フォルダー単位出力
Sub GetSubFolder(fp, lv)

    Dim i, tx, mk, ex
    Dim cf : Set cf = fso.GetFolder(fp)

    If cf.Name = "old" Then Exit Sub

    If lv < 4 Then
        WScript.Echo Space(lv * 2) & cf.Name
    End If

    'サブフォルダー出力
    On Error Resume Next
    i = cf.SubFolders.Count
    If Err.Number <> 0 Then
        WScript.Echo "アクセスできませんでした(" & Err.Number & ")"
        WScript.Echo "ファイルパス(" & cf.Path & ")"
    Else
        Dim sfp, subfol : subfol = sort(cf.SubFolders)
        For Each sfp In subfol
            Dim sf : Set sf = fso.GetFolder(sfp)
            tx = indent(sf.Path)
            writesht tx&"│"&vbTab
            writesht tx&"├"&vbTab&"─"&vbTab&"FOL"&vbTab&sf.Name
            Call GetSubFolder(sf.Path, lv + 1)
        Next
    End If
    On Error GoTo 0

    'ファイル出力
    i = 1
    Dim flp, files : files = sort(cf.Files)
    For Each flp In files
        Dim fl : Set fl = fso.GetFile(flp)
        tx = indent(fl.Path)
        mk = mark(i, cf.Files)
        ex = LCase(fso.GetExtensionName(fl))
        writesht tx&"│"&vbTab
        writesht tx&mk&vbTab&"─"&vbTab&ex&vbTab&fl.Name
        i = i + 1
    Next

    sht.Application.ScreenUpdating = True
    sht.Cells(row, 1).Select
    sht.Application.ScreenUpdating = False

End Sub

'////////////////////////////////////////
'// ワーク画像ロード＆貼り付け
Sub loadimg()
    sht.Cells(2, 2).Select
    Dim imgFolder : Set imgFolder = fso.GetFolder(".\img")
    Dim img : For Each img In imgFolder.Files
        Dim pic : Set pic = sht.Pictures.Insert(img.Path)
        With pic
            .Top = sht.Cells(2, 2).Top
            .Left = sht.Cells(2, 2).Left
            .Height = sht.Cells(2, 2).Height
        End With
        ims.Add fso.getBaseName(img), pic
    Next
End Sub

'////////////////////////////////////////
'// ワーク画像削除
Sub deleteimg()
    Dim i, k : k = ims.Keys
    For Each i In k
        ims.Item(i).Delete
    Next
End Sub

'////////////////////////////////////////
'// ソート
Function sort(cols)
    Dim paths: Set paths = CreateObject("Scripting.Dictionary")
    Dim i, j, wk, col, names(), rets()
    ReDim names(cols.Count - 1), rets(cols.Count - 1)
    i = 0
    For Each col In cols
        paths.Add LCase(col.Name), col.Path
        names(i) = LCase(col.Name)
        i = i + 1
    Next
    For i = 1 To UBound(names)
        wk = names(i)
        For j = i - 1 To 0 Step -1
            If StrComp(names(j), wk) <= 0 Then Exit For
            names(j + 1) = names(j)
        Next
        names(j + 1) = wk
    Next
    For i = 0 To UBound(names)
        rets(i) = paths.Item(names(i))
    Next
    sort = rets
End Function

'////////////////////////////////////////
'// インデント文字列作成
Function indent(fp)
    Dim i, lv: lv = UBound(Split(Replace(fp, findPath, ""), "\"))
    indent = "": For i = 2 To lv: indent = indent&"│"&vbTab&vbTab:Next
End Function

'////////////////////////////////////////
'// 直下罫線文字列作成
Function mark(i, oj)
    If i = oj.Count Then
        mark = "└"
    Else
        mark = "├"
    End If
End Function

'////////////////////////////////////////
'// セルの文字・画像を設定
Sub writesht(str)
    row = row + 1
    Dim ary : ary = Split(str, vbTab)
    Dim m : m = UBound(ary)
    '※ aryは0～m, Cellsは 1～m+1
    Dim i : For i = 0 To m
	    sht.Cells(row, i + 1).Value = ary(i)
    Next
    Dim b : b = ary(m - 1)
    Dim a : a = ary(m)
    If a <> "" Then
        If ims.Exists(b) Then
            ims.Item(b).Copy
            sht.Cells(row, m).Select
            sht.Cells(row, m).Value = ""
            sht.PasteSpecial(1)
        Else
            sht.Cells(row, m).Interior.ColorIndex = 36
        End If
    End If
End Sub

]]></script></job></package>