<?xml version="1.0" encoding="utf-8" ?>
<package><job><script language="VBScript"><![CDATA[

' update 2022.02.08 08:00

Option Explicit
'////////////////////////////////////////

Dim findPath

'////////////////////////////////////////

Dim fso: Set fso = CreateObject("Scripting.FileSystemObject")
Dim out: Set out = CreateObject("ADODB.Stream")
With out
  .Type = 2
  .Charset = "UTF-8"
End With

'////////////////////////////////////////
'// Main
Sub Main

    Dim lv : lv = 1
    Dim rf : Set rf = fso.GetFolder(findPath)
    findPath = rf.Path
    Set rf = Nothing
    Dim fn : fn = fso.GetFileName(findPath)

    Dim saveFile : saveFile = fso.GetAbsolutePathName(".\"&fn&".txt")
    If fso.FileExists(saveFile) Then
        WScript.Echo "ファイルがあります("&saveFile&")"
        Exit Sub
    End If

    '出力ファイルオープン
    out.Open

    '指定フォルダ出力
    out.WriteText "FOL"&vbTab&findPath, 1

    'フォルダー単位出力
    'On Error Resume Next

    Call GetSubFolder(findPath, lv)

    'エラー出力
    If Err.Number <> 0 Then
        WScript.Echo Err.Number & ":" & Err.Description
        WScript.Quit(Err.Number)
    End If

    'ファイル出力＆クローズ
    out.SaveToFile saveFile, 2
    out.Close

End Sub

'////////////////////////////////////////
'// Main
Dim arg: Set arg = WScript.Arguments.Unnamed
If arg.Count = 1 Then
    findPath = arg(0)
    WScript.Echo "開始します" & vbCrLf
    Call Main
    WScript.Echo vbCrLf & "終了しました"
Else
    WScript.Echo "引数を指定してください"
End If

'////////////////////////////////////////
'// フォルダー単位出力
Sub GetSubFolder(fp, lv)

    Dim i, tx, mk, ex
    Dim cf : Set cf = fso.GetFolder(fp)

    If cf.Name = "old" Then Exit Sub

    If lv < 4 Then
        WScript.Echo Space(lv * 2) & cf.Name
    End If

    'サブフォルダー出力
    On Error Resume Next
    i = cf.SubFolders.Count
    If Err.Number <> 0 Then
        WScript.Echo "アクセスできませんでした(" & Err.Number & ")"
        WScript.Echo "ファイルパス(" & cf.Path & ")"
    Else
        On Error GoTo 0
        Dim sfp, subfol : subfol = sort(cf.SubFolders)
        For Each sfp In subfol
            Dim sf : Set sf = fso.GetFolder(sfp)
            tx = indent(sf.Path)
            out.WriteText tx&"│", 1
            out.WriteText tx&"├"&vbTab&"─"&vbTab&"FOL"&vbTab&sf.Name, 1
            Call GetSubFolder(sf.Path, lv + 1)
        Next
    End If
    On Error GoTo 0

    'ファイル出力
    i = 1
    Dim flp, files : files = sort(cf.Files)
    For Each flp In files
        Dim fl : Set fl = fso.GetFile(flp)
        tx = indent(fl.Path)
        mk = mark(i, cf.Files)
        ex = LCase(fso.GetExtensionName(fl.Name))
        out.WriteText tx&"│", 1
        out.WriteText tx&mk&vbTab&"─"&vbTab&ex&vbTab&fl.Name, 1
        i = i + 1
    Next

End Sub

Function sort(cols)
    Dim paths: Set paths = CreateObject("Scripting.Dictionary")
    Dim i, j, wk, col, names(), rets()
    ReDim names(cols.Count - 1), rets(cols.Count - 1)
    i = 0
    For Each col In cols
        paths.Add LCase(col.Name), col.Path
        names(i) = LCase(col.Name)
        i = i + 1
    Next
    For i = 1 To UBound(names)
        wk = names(i)
        For j = i - 1 To 0 Step -1
            If StrComp(names(j), wk) <= 0 Then Exit For
            names(j + 1) = names(j)
        Next
        names(j + 1) = wk
    Next
    For i = 0 To UBound(names)
        rets(i) = paths.Item(names(i))
    Next
    sort = rets
End Function

Function indent(fp)
    Dim i, lv: lv = UBound(Split(Replace(fp, findPath, ""), "\"))
    indent = "": For i = 2 To lv: indent = indent&"│"&vbTab&vbTab:Next
End Function

Function mark(i, oj)
    If i = oj.Count Then
        mark = "└"
    Else
        mark = "├"
    End If
End Function

]]></script></job></package>