<?xml version="1.0" encoding="utf-8" ?>
<package><job><script language="VBScript"><![CDATA[

' update 2022.02.09 15:55

Option Explicit
'////////////////////////////////////////

Dim xlsxPath

'////////////////////////////////////////

Dim fso: Set fso = CreateObject("Scripting.FileSystemObject")
Dim ims: Set ims = CreateObject("Scripting.Dictionary")
Dim wkb, sht
Dim cnt : cnt = 0

'////////////////////////////////////////
'// Main
Sub Main

    '指定ファイルパスの処理
    If Not fso.FileExists(xlsxPath) Or _
       LCase(fso.GetExtensionName(xlsxPath)) <> "xlsx" Then
        WScript.Echo "エクセルファイルがありません("&xlsxPath&")"
        Exit Sub
    End If

    Dim rf : Set rf = fso.GetFile(xlsxPath)
    xlsxPath = rf.Path

    Dim imgPath : imgPath = fso.GetAbsolutePathName(".\img")
    If Not fso.FolderExists(imgPath) Then
        WScript.Echo "フォルダーがありません("&imgPath&")"
        Exit Sub
    End If

    'True:Excel起動, False:Excel利用
    Dim xlsapp : xlsapp = False
    'Excelアプリケーションのインスタンス生成/ワークシート作成
    Dim xls, wkbwk
    If xlsapp Then
        'Excelアプリケーションを起動して実行する
        On Error Resume Next
        Set xls = CreateObject("Excel.Application")
        If Err.Number <> 0 Then
            WScript.Echo Err.Number & ":" & Err.Description
        End If
        If Not IsObject(xls) Then
            WScript.Echo "Excel が起動できませんでした"
            Exit Sub
        End If
        Set wkbwk = xls.Workbooks.Add()
        On Error GoTo 0
    Else
        '起動されているExcelアプリケーションを利用して実行する(高速!?)
        On Error Resume Next
        Set wkbwk = CreateObject("Excel.Sheet")
        If Err.Number <> 0 Then
            WScript.Echo Err.Number & ":" & Err.Description
        End If
        If Not IsObject(wkbwk) Then
            WScript.Echo "Excel が起動されていません"
            Exit Sub
        End If
        On Error GoTo 0
    End If

    Set wkb = wkbwk.Application.Workbooks.Open(xlsxPath)
    wkbwk.Close
    Set wkbwk = Nothing

    '描画制御(False:高速化!?)
    wkb.Application.Visible = True
    wkb.Application.ScreenUpdating = False

    'ワークシートの初期設定
    Set sht = wkb.Sheets(1)
    sht.Activate
    sht.Cells.NumberFormatLocal = "@"
    sht.Range("A:T").ColumnWidth = 3

    'ワーク画像を事前に貼りておく
    Call loadimg

    '画像を置換する
    Dim chngimgrc : chngimgrc = False
    Do
        On Error Resume Next
        chngimgrc = chngimg()
        If Not chngimgrc Then
            WScript.Echo "Retry ..."
        End If
        On Error GoTo 0
    Loop While chngimgrc = False

    'ワークシート・エクセルファイル出力＆クローズ
    wkb.Application.ScreenUpdating = True
    wkb.Application.Visible = True

    'ワーク画像を削除する
    Call deleteimg
    'ワークシート・エクセルファイル出力＆クローズ(エラーでは出力してみる)
    wkb.Save
    wkb.Close

    If xlsapp Then
        xls.Quit
    End If

    Set sht = Nothing
    Set wkb = Nothing
    Set xls = Nothing

End Sub

'////////////////////////////////////////
'// Main
Dim arg: Set arg = WScript.Arguments.Unnamed
If arg.Count = 1 Then
    xlsxPath = arg(0)
    WScript.Echo "開始します" & vbCrLf
    Call Main
    WScript.Echo vbCrLf & "終了しました"
Else
    WScript.Echo "引数を指定してください"
End If

'////////////////////////////////////////
'// change
Function chngimg

    chngimg = False

    '拡張子を画像に差し替える
    With sht.Range("A:T")

        Dim ext, exts : exts = ims.Keys
        For Each ext In exts
            WScript.Echo "Convert "&ext&" to image."
            Dim c : Set c = .Find(ext, , -4163, 1, 1, 1, True, True)
            If Not c Is Nothing Then
                Dim firstCell : Set firstCell = c
                Do
                    ims.Item(ext).Copy
                    c.Value = ""
                    c.PasteSpecial(1)
                    Set c = .FindNext(c)
                    cnt = cnt + 1
                    If cnt Mod 100 = 0 Then
                        wkb.Application.ScreenUpdating = True
                        WScript.Echo "converting image : "&cnt
                        wkb.Application.ScreenUpdating = False
                    End If
                Loop While firstCell.Address <> c.Address
            End If
        Next

    End With

    chngimg = True

End Function

'////////////////////////////////////////
'// ワーク画像ロード＆貼り付け
Sub loadimg()
    Dim imgFolder : Set imgFolder = fso.GetFolder(".\img")
    Dim img : For Each img In imgFolder.Files
        Dim pic
        sht.Cells(2, 2).Select
        With sht.Pictures.Insert(img.Path)
            .Top = sht.Cells(2, 2).Top
            .Left = sht.Cells(2, 2).Left
            .Height = sht.Cells(2, 2).Height
            .Copy
            sht.Cells(2, 2).PasteSpecial(1)
            Set pic = sht.Shapes(sht.Shapes.Count)
            .Delete
        End With
        ims.Add fso.GetBaseName(img), pic
    Next
End Sub

'////////////////////////////////////////
'// ワーク画像削除
Sub deleteimg()
    Dim i, k : k = ims.Keys
    For Each i In k
        ims.Item(i).Delete
    Next
End Sub

]]></script></job></package>